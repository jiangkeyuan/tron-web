{"version":3,"file":"aria.75ec5909.js","sources":["../../node_modules/element-plus/es/utils/dom/aria.mjs"],"sourcesContent":["const FOCUSABLE_ELEMENT_SELECTORS = `a[href],button:not([disabled]),button:not([hidden]),:not([tabindex=\"-1\"]),input:not([disabled]),input:not([type=\"hidden\"]),select:not([disabled]),textarea:not([disabled])`;\nconst isVisible = (element) => {\n  if (process.env.NODE_ENV === \"test\")\n    return true;\n  const computed = getComputedStyle(element);\n  return computed.position === \"fixed\" ? false : element.offsetParent !== null;\n};\nconst obtainAllFocusableElements = (element) => {\n  return Array.from(element.querySelectorAll(FOCUSABLE_ELEMENT_SELECTORS)).filter((item) => isFocusable(item) && isVisible(item));\n};\nconst isFocusable = (element) => {\n  if (element.tabIndex > 0 || element.tabIndex === 0 && element.getAttribute(\"tabIndex\") !== null) {\n    return true;\n  }\n  if (element.disabled) {\n    return false;\n  }\n  switch (element.nodeName) {\n    case \"A\": {\n      return !!element.href && element.rel !== \"ignore\";\n    }\n    case \"INPUT\": {\n      return !(element.type === \"hidden\" || element.type === \"file\");\n    }\n    case \"BUTTON\":\n    case \"SELECT\":\n    case \"TEXTAREA\": {\n      return true;\n    }\n    default: {\n      return false;\n    }\n  }\n};\nconst attemptFocus = (element) => {\n  var _a;\n  if (!isFocusable(element)) {\n    return false;\n  }\n  (_a = element.focus) == null ? void 0 : _a.call(element);\n  return document.activeElement === element;\n};\nconst triggerEvent = function(elm, name, ...opts) {\n  let eventName;\n  if (name.includes(\"mouse\") || name.includes(\"click\")) {\n    eventName = \"MouseEvents\";\n  } else if (name.includes(\"key\")) {\n    eventName = \"KeyboardEvent\";\n  } else {\n    eventName = \"HTMLEvents\";\n  }\n  const evt = document.createEvent(eventName);\n  evt.initEvent(name, ...opts);\n  elm.dispatchEvent(evt);\n  return elm;\n};\nconst isLeaf = (el) => !el.getAttribute(\"aria-owns\");\nconst getSibling = (el, distance, elClass) => {\n  const { parentNode } = el;\n  if (!parentNode)\n    return null;\n  const siblings = parentNode.querySelectorAll(elClass);\n  const index = Array.prototype.indexOf.call(siblings, el);\n  return siblings[index + distance] || null;\n};\nconst focusNode = (el) => {\n  if (!el)\n    return;\n  el.focus();\n  !isLeaf(el) && el.click();\n};\n\nexport { attemptFocus, focusNode, getSibling, isFocusable, isLeaf, isVisible, obtainAllFocusableElements, triggerEvent };\n//# sourceMappingURL=aria.mjs.map\n"],"names":["FOCUSABLE_ELEMENT_SELECTORS","isVisible","element","obtainAllFocusableElements","item","isFocusable","triggerEvent","elm","name","opts","eventName","evt"],"mappings":"AAAA,MAAMA,EAA8B,6KAC9BC,EAAaC,GAGA,iBAAiBA,CAAO,EACzB,WAAa,QAAU,GAAQA,EAAQ,eAAiB,KAEpEC,EAA8BD,GAC3B,MAAM,KAAKA,EAAQ,iBAAiBF,CAA2B,CAAC,EAAE,OAAQI,GAASC,EAAYD,CAAI,GAAKH,EAAUG,CAAI,CAAC,EAE1HC,EAAeH,GAAY,CAC/B,GAAIA,EAAQ,SAAW,GAAKA,EAAQ,WAAa,GAAKA,EAAQ,aAAa,UAAU,IAAM,KACzF,MAAO,GAET,GAAIA,EAAQ,SACV,MAAO,GAET,OAAQA,EAAQ,SAAQ,CACtB,IAAK,IACH,MAAO,CAAC,CAACA,EAAQ,MAAQA,EAAQ,MAAQ,SAE3C,IAAK,QACH,MAAO,EAAEA,EAAQ,OAAS,UAAYA,EAAQ,OAAS,QAEzD,IAAK,SACL,IAAK,SACL,IAAK,WACH,MAAO,GAET,QACE,MAAO,EAEV,CACH,EASMI,EAAe,SAASC,EAAKC,KAASC,EAAM,CAChD,IAAIC,EACAF,EAAK,SAAS,OAAO,GAAKA,EAAK,SAAS,OAAO,EACjDE,EAAY,cACHF,EAAK,SAAS,KAAK,EAC5BE,EAAY,gBAEZA,EAAY,aAEd,MAAMC,EAAM,SAAS,YAAYD,CAAS,EAC1C,OAAAC,EAAI,UAAUH,EAAM,GAAGC,CAAI,EAC3BF,EAAI,cAAcI,CAAG,EACdJ,CACT"}