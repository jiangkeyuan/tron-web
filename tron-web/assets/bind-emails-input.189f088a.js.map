{"version":3,"file":"bind-emails-input.189f088a.js","sources":["../../src/components/bind-emails-input.vue"],"sourcesContent":["<template>\n  <el-dialog v-model=\"innerVisible\" width=\"30%\" append-to-body title=\"绑定邮箱\" @close=\"closeDialog\">\n    <el-form-item>\n      <el-input class=\"login-content-right-input-l\" v-model.trim=\"value.email\" placeholder=\"请输入您的邮箱地址\">\n        <template #prefix>\n          <img src=\"@/assets/login/login-user.svg\" alt=\"\" />\n        </template>\n      </el-input>\n    </el-form-item>\n    <el-form-item class=\"login-content-right-input login-content-right-c\" prop=\"verifyCode\">\n      <el-input class=\"login-content-right-input-l login-content-right-input-code\" v-model=\"value.verifyCode\"\n        placeholder=\"请输入验证码\">\n        <template #prefix>\n          <img src=\"@/assets/login/login-code.svg\" alt=\"\" />\n        </template>\n      </el-input>\n      <img class=\"login-content-right-c-img\" alt=\"\" :src=\"verifyCode\" @click=\"() => getCode()\" />\n    </el-form-item>\n    <el-button type=\"primary\" color=\"#294aa5\" class=\"login-content-button\" @click=\"() => bindEmails()\">绑定</el-button>\n  </el-dialog>\n</template>\n<script setup>\nimport { generateVerifyCode } from '@/utils/axios/login/index.js';\nimport { setEmail } from '@/utils/axios/buyer/index.js';\nimport { onMounted } from 'vue';\nimport { ElMessage } from 'element-plus';\nconst innerVisible = ref(true);\nconst value = reactive({})\nconst verifyCode = ref('');\nconst store = useStore();\nconst props = defineProps({\n  callBack: Function,\n  showBind: Boolean,\n  close: Function\n})\n\nwatch(() => props.showBind, (o, n) => {\n  console.log(o, n)\n})\n\nconst getCode = async () => {\n  const data = await generateVerifyCode('bindemail ');\n  if (data.code === 12000) {\n    verifyCode.value = 'data:image/png;base64,' + data.data.imageBase64;\n  }\n}\n\nconst closeDialog = () => {\n  props.close && props.close()\n}\n\nconst bindEmails = async () => {\n  if (!value.email) {\n    return ElMessage.error('邮箱未填写')\n  }\n  if (!value.verifyCode) {\n    return ElMessage.error('验证码未填写')\n  }\n  const data = await setEmail({ ...value, Authorization: localStorage.getItem('token') })\n  if (data.code === 12000) {\n    store.dispatch('getUserInfoAction');\n    props.callBack && props.callBack()\n  } else {\n    getCode();\n    ElMessage.error(data.msg)\n  }\n}\n\nonMounted(() => {\n  getCode()\n})\n</script>\n<style scoped>\n.login-content-button {\n  width: 100%;\n  height: 40px;\n}\n\n.login-content-right-c-img {\n  margin-left: 10px;\n}\n\n.login-content-right-input-code {\n  width: 60%;\n}\n</style>"],"names":["innerVisible","ref","value","reactive","verifyCode","store","useStore","watch","props","n","getCode","data","generateVerifyCode","closeDialog","bindEmails","ElMessage","setEmail","onMounted"],"mappings":"iqBA0BAA,EAAAC,EAAA,EAAA,EACAC,EAAAC,EAAA,EAAA,EACAC,EAAAH,EAAA,EAAA,EACAI,EAAAC,EAAA,EAOAC,EAAA,IAAAC,EAAA,SAAA,CAAA,EAAAC,IAAA,CACA,QAAA,IAAA,EAAAA,CAAA,CACA,CAAA,EAEA,MAAAC,EAAA,SAAA,CACA,MAAAC,EAAA,MAAAC,EAAA,YAAA,EACAD,EAAA,OAAA,OACAP,EAAA,MAAA,yBAAAO,EAAA,KAAA,YAEA,EAEAE,EAAA,IAAA,CACAL,EAAA,OAAAA,EAAA,MAAA,CACA,EAEAM,EAAA,SAAA,CACA,GAAA,CAAAZ,EAAA,MACA,OAAAa,EAAA,MAAA,gCAAA,EAEA,GAAA,CAAAb,EAAA,WACA,OAAAa,EAAA,MAAA,sCAAA,EAEA,MAAAJ,EAAA,MAAAK,EAAA,CAAA,GAAAd,EAAA,cAAA,aAAA,QAAA,OAAA,EAAA,EACAS,EAAA,OAAA,MACAN,EAAA,SAAA,mBAAA,EACAG,EAAA,UAAAA,EAAA,SAAA,IAEAE,IACAK,EAAA,MAAAJ,EAAA,GAAA,EAEA,EAEA,OAAAM,EAAA,IAAA,CACAP,EAAA,CACA,CAAA"}