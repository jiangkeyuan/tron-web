{"version":3,"file":"index.65ef1111.js","sources":["../../node_modules/element-plus/es/hooks/use-attrs/index.mjs"],"sourcesContent":["import { computed, getCurrentInstance } from 'vue';\nimport { fromPairs } from 'lodash-unified';\nimport '../../utils/index.mjs';\nimport { debugWarn } from '../../utils/error.mjs';\n\nconst DEFAULT_EXCLUDE_KEYS = [\"class\", \"style\"];\nconst LISTENER_PREFIX = /^on[A-Z]/;\nconst useAttrs = (params = {}) => {\n  const { excludeListeners = false, excludeKeys } = params;\n  const allExcludeKeys = computed(() => {\n    return ((excludeKeys == null ? void 0 : excludeKeys.value) || []).concat(DEFAULT_EXCLUDE_KEYS);\n  });\n  const instance = getCurrentInstance();\n  if (!instance) {\n    debugWarn(\"use-attrs\", \"getCurrentInstance() returned null. useAttrs() must be called at the top of a setup function\");\n    return computed(() => ({}));\n  }\n  return computed(() => {\n    var _a;\n    return fromPairs(Object.entries((_a = instance.proxy) == null ? void 0 : _a.$attrs).filter(([key]) => !allExcludeKeys.value.includes(key) && !(excludeListeners && LISTENER_PREFIX.test(key))));\n  });\n};\n\nexport { useAttrs };\n//# sourceMappingURL=index.mjs.map\n"],"names":["DEFAULT_EXCLUDE_KEYS","LISTENER_PREFIX","useAttrs","params","excludeListeners","excludeKeys","allExcludeKeys","computed","instance","getCurrentInstance","_a","fromPairs","key"],"mappings":"uDAKA,MAAMA,EAAuB,CAAC,QAAS,OAAO,EACxCC,EAAkB,WAClBC,EAAW,CAACC,EAAS,KAAO,CAChC,KAAM,CAAE,iBAAAC,EAAmB,GAAO,YAAAC,CAAW,EAAKF,EAC5CG,EAAiBC,EAAS,MACrBF,GAAe,KAAO,OAASA,EAAY,QAAU,CAAE,GAAE,OAAOL,CAAoB,CAC9F,EACKQ,EAAWC,IACjB,OAAKD,EAIED,EAAS,IAAM,CACpB,IAAIG,EACJ,OAAOC,EAAU,OAAO,SAASD,EAAKF,EAAS,QAAU,KAAO,OAASE,EAAG,MAAM,EAAE,OAAO,CAAC,CAACE,CAAG,IAAM,CAACN,EAAe,MAAM,SAASM,CAAG,GAAK,EAAER,GAAoBH,EAAgB,KAAKW,CAAG,EAAE,CAAC,CAClM,CAAG,EALQL,EAAS,KAAO,CAAE,EAAC,CAM9B"}